import fs from "fs/promises";
import path from "path";
import settings from "../settings.js";

export default {
  name: "help",
  alias: ["menu", "cmd"],
  description: "Show all commands grouped by category",

  async execute(sock, msg, args) {
    const chatId = msg.key.remoteJid;

    // ‚úÖ Build the menu text dynamically
    let menuText = `‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚ü™ *${settings.botName} Help Menu* ‚ü´‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚¨£
‚îÇ üëë *Owner:* ${settings.ownerName}
‚îÇ üîó *Contact:* ${settings.ownerContactLink}
‚îÇ ‚öôÔ∏è *Prefix:* ${settings.prefix}
‚îÇ üì¢ *Channel:* ${settings.channel}
‚îÇ üßë‚Äçüíª *GitHub:* ${settings.github}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚¨£\n`;

    for (const [category, cmds] of Object.entries(settings.commands)) {
      const title = category.charAt(0).toUpperCase() + category.slice(1);
      menuText += `\nüìÅ *${title} Commands:*\n`;
      cmds.forEach(cmd => {
        menuText += `  ‚û§ ${settings.prefix}${cmd}\n`;
      });
    }

    menuText += `\nüìÖ ${new Date().toLocaleString()}\n¬©Ô∏è ${settings.botName} by ${settings.ownerName}`;

    try {
      // ‚úÖ Try to attach bot image
      const imagePath = path.join(process.cwd(), "assets", "bot_image.jpg");
      let imageBuffer = null;

      try {
        imageBuffer = await fs.readFile(imagePath);
      } catch {
        console.log("‚ö†Ô∏è No bot image found, sending text-only menu.");
      }

      if (imageBuffer) {
        await sock.sendMessage(
          chatId,
          { image: imageBuffer, caption: menuText },
          { quoted: msg }
        );
      } else {
        await sock.sendMessage(chatId, { text: menuText }, { quoted: msg });
      }
    } catch (err) {
      console.error("‚ùå Failed to send help menu:", err);
      await sock.sendMessage(
        chatId,
        { text: "‚ö†Ô∏è Failed to display help menu." },
        { quoted: msg }
      );
    }
  }
};
